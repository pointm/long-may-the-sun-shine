# encoding: utf-8
# 2022 R1
SetScriptVersion(Version="22.1.217")
template1 = GetTemplate(
    TemplateName="Steady-State Thermal",
    Solver="ANSYS")
system1 = template1.CreateSystem()
system1.DisplayText = "Semiconductor"
favorites1 = EngData.LoadFavoriteItems()
library1 = EngData.OpenLibrary(
    Name="ANSYS GRANTA Materials Data for Simulation (Sample)",
    Source="Granta_Design_Typical_Materials.xml")
EngData.EnableFilter(Enable=False)
engineeringData1 = system1.GetContainer(ComponentName="Engineering Data")
matl1 = engineeringData1.CreateMaterial(Name="Copper")
matl2 = engineeringData1.CreateMaterial(Name="Silcon")
EngData.EnableFilter()
EngData.EnableFilter(Enable=False)
matlProp1 = matl2.CreateProperty(
    Name="Density",
    Qualifiers={"Definition": "", "Behavior": ""})
matlProp2 = matl1.CreateProperty(
    Name="Density",
    Qualifiers={"Definition": "", "Behavior": ""})
matlProp3 = matl1.CreateProperty(
    Name="Coefficient of Thermal Expansion",
    Definition="Instantaneous",
    Behavior="Isotropic",
    Qualifiers={"Definition": "Instantaneous", "Behavior": "Isotropic"})
matlProp4 = matl1.CreateProperty(
    Name="Elasticity",
    Behavior="Isotropic",
    Qualifiers={"Definition": "", "Behavior": "Isotropic"})
matlProp5 = matl1.CreateProperty(
    Name="Thermal Conductivity",
    Behavior="Isotropic",
    Qualifiers={"Definition": "", "Behavior": "Isotropic"})
matlProp6 = matl2.CreateProperty(
    Name="Coefficient of Thermal Expansion",
    Definition="Instantaneous",
    Behavior="Isotropic",
    Qualifiers={"Definition": "Instantaneous", "Behavior": "Isotropic"})
matlProp7 = matl2.CreateProperty(
    Name="Elasticity",
    Behavior="Isotropic",
    Qualifiers={"Definition": "", "Behavior": "Isotropic"})
matlProp8 = matl2.CreateProperty(
    Name="Thermal Conductivity",
    Behavior="Isotropic",
    Qualifiers={"Definition": "", "Behavior": "Isotropic"})
matlProp9 = matl2.CreateProperty(
    Name="Specific Heat",
    Definition="Constant Volume",
    Qualifiers={"Definition": "Constant Volume", "Behavior": ""})
matlProp10 = matl1.CreateProperty(
    Name="Specific Heat",
    Definition="Constant Volume",
    Qualifiers={"Definition": "Constant Volume", "Behavior": ""})
matlProp2.SetData(
    Index=-1,
    Variables=["Density"],
    Values=[["8933 [kg m^-3]"]])
matlProp3.SetData(
    Index=-1,
    Variables=["Coefficient of Thermal Expansion"],
    Values=[["2.08 [C^-1]"]])
matlProp4.SetVariableProperty(
    VariableName="Young's Modulus",
    Property="Unit",
    Value="MPa")
matlProp4.SetData(
    Index=-1,
    Variables=["Young's Modulus"],
    Values=[["1 [MPa]"]])
matlProp4.SetData(
    Variables=["Young's Modulus"],
    Values=[["100000 [MPa]"]])
matlProp4.SetData(
    Variables=["Poisson's Ratio"],
    Values=[["0.3"]])
matlProp5.SetData(
    Index=-1,
    Variables=["Thermal Conductivity"],
    Values=[["400 [W m^-1 C^-1]"]])
matlProp10.SetData(
    Index=-1,
    Variables=["Specific Heat"],
    Values=[["385 [J kg^-1 C^-1]"]])
matlProp1.SetData(
    Index=-1,
    Variables=["Density"],
    Values=[["2330 [kg m^-3]"]])
matlProp6.SetData(
    Index=-1,
    Variables=["Coefficient of Thermal Expansion"],
    Values=[["2.6 [C^-1]"]])
matlProp6.SetData(
    Variables=["Coefficient of Thermal Expansion"],
    Values=[["2.6E-06 [C^-1]"]])
matlProp7.SetData(
    Index=-1,
    Variables=["Young's Modulus"],
    Values=[["200000 [Pa]"]])
matlProp7.SetVariableProperty(
    VariableName="Young's Modulus",
    Property="Unit",
    Value="MPa")
matlProp7.SetData(
    Variables=["Young's Modulus"],
    Values=[["0.19999999999999998 [MPa]"]])
matlProp7.SetData(
    Variables=["Young's Modulus"],
    Values=[["200000 [MPa]"]])
matlProp7.SetData(
    Variables=["Poisson's Ratio"],
    Values=[["0.27"]])
matlProp8.SetData(
    Index=-1,
    Variables=["Thermal Conductivity"],
    Values=[["148 [W m^-1 C^-1]"]])
matlProp9.SetData(
    Index=-1,
    Variables=["Specific Heat"],
    Values=[["712 [J kg^-1 C^-1]"]])
Save(Overwrite=True)
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit()
geometry1.Exit()
modelComponent1 = system1.GetComponent(Name="Model")
modelComponent1.Refresh()
model1 = system1.GetContainer(ComponentName="Model")
model1.Edit()
geometry1.Edit()
geometry1.Exit()
modelComponent1.Refresh()
model1.Edit()
model1.Exit()
model1.Edit()
model1.Exit()
template2 = GetTemplate(
    TemplateName="Static Structural",
    Solver="ANSYS")
engineeringDataComponent1 = system1.GetComponent(Name="Engineering Data")
geometryComponent1 = system1.GetComponent(Name="Geometry")
solutionComponent1 = system1.GetComponent(Name="Solution")
componentTemplate1 = GetComponentTemplate(Name="SimulationSetupCellTemplate_StructuralStaticANSYS")
system2 = template2.CreateSystem(
    ComponentsToShare=[engineeringDataComponent1, geometryComponent1, modelComponent1],
    DataTransferFrom=[Set(FromComponent=solutionComponent1, TransferName=None, ToComponentTemplate=componentTemplate1)],
    Position="Right",
    RelativeTo=system1)
model1.Edit()
model1.Exit()
Save(Overwrite=True)
